<?php/* * Class Query String * * @subpackage 	: ClassQuery [ V.1.3.1 ] * @link       	: http://www.xxxxx.com/ * @author	   	: Double Dik * @email		: tisoledat.gebrug@gmail.com | beautiful_trip@yahoo.com * @create     	: Desember 13, 2008 * @modif      	: Maret 30, 2010 * @note       	: Untuk  Mengolah CMS Sederhana, jika ada perubahan kasih comment di dalam functionya. * @website		: */class ClassQuery{		function insertQuery($table, $field_db, $fieldInsert){			if(mysql_query("INSERT INTO ".$table." (".$field_db.") VALUES (".$fieldInsert.")")or die(mysql_error())){				return true;				}else{				return false;			}		}		function updateQuery($table, $fieldUpdate, $field){			if(mysql_query("UPDATE ".$table." SET ".$fieldUpdate." WHERE ".$field."")or die(mysql_error())){				return true;				}else{				return false;			}		}		function deleteQuery($table, $field) {			$rs = mysql_query("DELETE FROM ".$table." WHERE ".$field."")or die(mysql_error());			return $rs;		}		function getAllRecord($table, $field){			$rs = mysql_query("SELECT * FROM ".$table." ORDER BY ".$field." ")or die(mysql_error());			return $rs;		}		function getRecord($table, $field){			$rs = mysql_query("SELECT * FROM ".$table." WHERE ".$field."")or die(mysql_error());			return $rs;		}		function getRecordOrderA($table, $field, $order, $ext){			$rs = mysql_query("SELECT * FROM ".$table." WHERE ".$field." ORDER BY ".$order." ASC ".$ext)or die(mysql_error());			return $rs;		}		function getRecordOrderD($table, $field, $order, $ext){			$rs = mysql_query("SELECT * FROM ".$table." WHERE ".$field." ORDER BY ".$order." DESC ".$ext)or die(mysql_error());			return $rs;		}		function getFieldSelected($fieldS, $table, $field, $order){			$rs = mysql_query("SELECT ".$fieldS." FROM ".$table." WHERE ".$field." ORDER BY ".$order." ASC ")or die(mysql_error());			return $rs;		}		function getSingle($query){			$sql=mysql_query($query);			$rowset=mysql_fetch_row($sql);			return $rowset[0];		}		function getName($table, $field, $fielRec){			$rs = $this->getRecord($table, $field);			if($row = mysql_fetch_array($rs)){				$nama = $row[''.$fielRec.''];			}			return $nama;		}		function getCount($table, $count_field, $field){			$rs	= mysql_query("SELECT COUNT(".$count_field.") AS Hasil FROM ".$table." WHERE ".$field."")or die(mysql_error());			if($row = mysql_fetch_array($rs)){				$data = $row['Hasil'];			}			return $data;		}		function getSum($table, $count_field, $field){			$rs	= mysql_query("SELECT SUM(".$count_field.") AS Hasil FROM ".$table." WHERE ".$field."")or die(mysql_error());			if($row = mysql_fetch_array($rs)){				$data = $row['Hasil'];			}			return $data;		}		function getAvg($table, $count_field, $field){			$rs	= mysql_query("SELECT AVG(".$count_field.") AS Hasil FROM ".$table." WHERE ".$field."")or die(mysql_error());			if($row = mysql_fetch_array($rs)){				$data = $row['Hasil'];			}			return $data;		}		function getMax($table, $count_field, $field){			$rs	= mysql_query("SELECT MAX(".$count_field.") AS Hasil FROM ".$table." WHERE ".$field."")or die(mysql_error());			if($row = mysql_fetch_array($rs)){				$data = $row['Hasil'];			}			return $data;		}		function getMin($table, $count_field, $field){			$rs	= mysql_query("SELECT MIN(".$count_field.") AS Hasil FROM ".$table." WHERE ".$field."")or die(mysql_error());			if($row = mysql_fetch_array($rs)){				$data = $row['Hasil'];			}			return $data;		}		function get_menu_tree($table, $status, $file1, $file2, $categories){			$data	= "";			$rs		= $this->getRecord($table, $status);			while($row = mysql_fetch_array($rs)){				$data .= '<li id="menu1"><a href="'.$file1.'?categories='.$row['id'].'">'.$row['nama_categori'].'</a>';				if($row['id'] == $categories){					$data .= '<ul style="border:none;">';						$rs2	= $this->getRecord($table, "id_parent = '".$row['id']."' AND status = 2");						while($row2 = mysql_fetch_array($rs2)){							$data .= '<li class="last"><a href="'.$file2.'?categories='.$categories.'&type='.$row2['id'].'">'.$row2['nama_categori'].'</a></li>';						 }						 $data .= '</li></ul>';				}else{					$data .= '</li>';				}			}			return $data;		}		function formatAngka($angka) {			$hasil = number_format($angka,0, ",",".");			return $hasil;		}		function xss_clean($str){			if(!get_magic_quotes_gpc()) {				$str = addslashes($str);			}			$str = strip_tags(htmlspecialchars($str));			return $str;		}		function cache_clean(){			$data = header("Cache-Control: no-cache, must-revalidate");			return $data;		}		function validasi($str) {			$str = str_replace("'","",$str);			$str = str_replace("<","&lt;",$str);			$str = str_replace(">","&gt;",$str);			return $str;		}		function validasiTypeImages($str) {			$str = str_replace(".jpg","",$str);			$str = str_replace(".jpeg","",$str);			$str = str_replace(".gif","",$str);			$str = str_replace(".png","",$str);			$str = str_replace(".bmp","",$str);			$str = str_replace(".pjpeg","",$str);			return $str;		}		function dirImage($dir, $kode){			if (file_exists($dir.$kode.".jpg")) {				$type = "jpg";			}elseif (file_exists($dir.$kode.".gif")) {				$type = "gif";			}elseif (file_exists($dir.$kode.".png")) {				$type = "png";			}elseif (file_exists($dir.$kode.".jpeg")) {				$type = "jpeg";			}elseif (file_exists($dir.$kode.".pjpeg")) {				$type = "pjpeg";			}else{				$type = "";			}			if ($type == "") {					$picture	= '';				}else{					$picture	= $type;				}			return $picture;		}		function showImagesC($dir, $kode, $custom){			if (file_exists($dir.$kode.".jpg")) {				$type = "jpg";			}elseif (file_exists($dir.$kode.".gif")) {				$type = "gif";			}elseif (file_exists($dir.$kode.".png")) {				$type = "png";			}elseif (file_exists($dir.$kode.".jpeg")) {				$type = "jpeg";			}elseif (file_exists($dir.$kode.".pjpeg")) {				$type = "pjpeg";			}else{				$type = "";			}			if ($type == "") {					$picture	= '';				}else{					$picture	= '<img src="'.$dir.$kode.'.'.$type.'"'.$custom.'/>';				}			return $picture;		}		function fixImage($content){			$data = str_replace('images-content/','../images-content/',$content);			return $data;		}		function random($length = 12, $chars){			$chars_length 	= (strlen($chars) - 1);			$string 		= $chars{rand(0, $chars_length)};			for ($i = 1; $i < $length; $i = strlen($string)){				$r = $chars{rand(0, $chars_length)};				if ($r != $string{$i - 1}) $string .= $r;			}			return $string;		}		function get_merk_hp(){			$listMerk 	= array('Nokia', 'iPhone', 'iPod', 'BlackBerry', 'HTC', 'LG', 'Nokia', 'Samsung', 'SonyEricsson');			$agent 		= $_SERVER['HTTP_USER_AGENT'];			foreach ($listMerk as $merk){			   $count = substr_count($agent, $merk);			   if ($count > 0) $merkDigunakan = $merk;			}			return $merkDigunakan;		}		function direct_mobile($domain, $domain_mobile){			$listMerk 	= array('Nokia', 'iPhone', 'iPod', 'BlackBerry', 'HTC', 'LG', 'Nokia', 'Samsung', 'SonyEricsson');			$agent 		= $_SERVER['HTTP_USER_AGENT'];			$cek 		= 0;			foreach ($listMerk as $merk){			   $count = substr_count($agent, $merk);			   if ($count > 0) $cek = 1;			}			if ($cek == 0){				$data = header("Location: http://".$domain."");			}elseif($cek == 1){				$data = header("Location: http://".$domain_mobile."");			}			return $data;		}		function replace_string_chart($string, $replace){			$string	= str_replace(' ', $replace, $string);			$string	= str_replace('.', $replace, $string);			$string	= str_replace(',', $replace, $string);			$string	= str_replace('-', $replace, $string);			$string	= str_replace('|', $replace, $string);			$string	= str_replace('/', $replace, $string);			$string	= str_replace(';', $replace, $string);			return $string;		}        function getMoon($ss_bulan){            switch($ss_bulan){               case'01':                     $bulan = 'January';               break;               case'02':                     $bulan = 'February';               break;               case'03':                     $bulan = 'March';               break;               case'04':                     $bulan = 'April';               break;               case'05':                     $bulan = 'May';               break;               case'06':                     $bulan  = 'June';               break;               case'07':                     $bulan  = 'July';               break;               case'08':                     $bulan  = 'August';               break;               case'09':                     $bulan  = 'September';               break;               case'10':                     $bulan  = 'October';               break;               case'11':                     $bulan  = 'November';               break;               case'12':                     $bulan  = 'December';               break;               default:$bulan    = '';              }              return $bulan;        }		/*		 * @ Form Attribut HTML		 * @ Input Type Attribut HTML		 */		function form_open($action, $file_name, $method, $status){			$data = '<form action="'.$action.'" name="'.$file_name.'" method="'.$method.'" '.$status.'>';			return $data;		}		function form_close(){			$data = '</form>';			return $data;		}		function form_password($file_name, $value, $status){			$data = '<input type="password" name="'.$file_name.'" value="'.$this->xss_clean($value).'" '.$status.'/>';			return $data;		}		function form_input($file_name, $value, $status){			$data = '<input type="text" name="'.$file_name.'" value="'.$this->xss_clean($value).'" '.$status.'/>';			return $data;		}		function form_hidden($file_name, $value, $status){			$data = '<input type="hidden" name="'.$file_name.'" value="'.$this->xss_clean($value).'" '.$status.'/>';			return $data;		}		function form_file($file_name){			$data = '<input type="file" name="'.$file_name.'" />';			return $data;		}		function preview_image($file_name, $fungsi){			$data = '<input type="file" name="'.$file_name.'" onchange="'.$fungsi.'"/>';			return $data;		}		function form_textarea($file_name, $rows, $value, $status){			$data = '<textarea name="'.$file_name.'" rows="'.$rows.'" '.$status.'>'.$value.'</textarea>';			return $data;		}		function form_dropdown($file_name, $onChange, $table, $status, $get_id, $get_field, $show_field){			$data = '<select name="'.$file_name.'" class="input-box" onchange="'.$onChange.'">';			  $data .= '<option value="">- pilih -</option>';					$rs = $this->getRecord($table, $status);					while ($row =mysql_fetch_array($rs)){						if ($row[''.$get_field.''] == $get_id) {							$cek = "selected";						}else {							$cek = "";						}						$data .= "<option value=".$row[''.$get_field.'']." ".$cek.">".$row[''.$show_field.'']."</option>";					}			$data .= '</select>';			return $data;		}		function form_submit($file_name, $value, $status){			$data = '<input type="submit" name="'.$file_name.'" value="'.$value.'" '.$status.'/>';			return $data;		}		function form_button($file_name, $value, $status){			$data = '<input type="button" name="'.$file_name.'" value="'.$value.'" '.$status.'/>';			return $data;		}		function anchor($link_page, $file_name, $status){			$data = '<a href="'.$link_page.'" '.$status.'>'.$file_name.'</a>';			return $data;		}		/* End Form Atrribut */		function shared_facebook(){			$data = '<div id="butFb"><a name="fb_share"></a><script src="http://static.ak.fbcdn.net/connect.php/js/FB.Share" type="text/javascript"></script></div>';			return $data;		}		function shared_twitter(){			$data = '<div id="butTwitter"><a href="http://twitter.com/share" class="twitter-share-button" data-count="horizontal" data-via="isikan_username_twitter_anda">Tweet</a> <script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script></div>';			return $data;		}		function send_email($email){			$data = '<a href="mailto:'.$email.'">'.$email.'</a>';			return $data;		}		function send_yahoo($yahoo_id){			$data = '<a href="ymsgr:sendim?'.$yahoo_id.'" class="link-news"><img border=0 src=http://opi.yahoo.com/online?u='.$yahoo_id.'&m=g&t=1></a>';			return $data;		}		function redirect($file_name){			$data	= ('<script language="javascript">self.location.href="'.$file_name.'"</script>');			return $data;		}		function validateEmail($email){			return preg_match('/^[a-z0-9_-][a-z0-9._-]+@([a-z0-9][a-z0-9-]*\.)+[a-z]{2,6}$/i', $email);		}		function imageRealName($fileProduk, $location){		if($fileProduk['type']!=''){			$type = $fileProduk['type'];			if ($type == "image/jpeg") {				$type = "jpg";				}elseif ($type == "image/gif") {					$type = "gif";				}elseif ($type == "image/pjpeg") {					$type = "pjpeg";				}elseif ($type == "image/png") {					$type = "png";			}				if (file_exists("".$location.$fileProduk["name"].".jpg")) {					unlink("".$location.$fileProduk["name"].".jpg");				}				if (file_exists("".$location.$fileProduk["name"].".gif")) {					unlink("".$location.$fileProduk["name"].".gif");				}				if (file_exists("".$location.$fileProduk["name"].".pjpeg")) {					unlink("".$location.$$fileProduk["name"].".pjpeg");				}				if (file_exists("".$location.$fileProduk["name"].".png")) {					unlink("".$location.$fileProduk["name"].".png");				}				copy($fileProduk["tmp_name"], $location.$fileProduk["name"].".".$type);			}		}		function uploadImage($fileProduk, $location, $kode) {			if($fileProduk['type']!=''){			$type = $fileProduk['type'];			if ($type == "image/jpeg") {				$type = "jpg";				}elseif ($type == "image/gif") {					$type = "gif";				}elseif ($type == "image/pjpeg") {					$type = "pjpeg";				}elseif ($type == "image/png") {					$type = "png";			}				if (file_exists("".$location.$kode.".jpg")) {					unlink("".$location.$kode.".jpg");				}				if (file_exists("".$location.$kode.".gif")) {					unlink("".$location.$kode.".gif");				}				if (file_exists("".$location.$kode.".pjpeg")) {					unlink("".$location.$kode.".pjpeg");				}				if (file_exists("".$location.$kode.".png")) {					unlink("".$location.$kode.".png");				}				ResizeImage($fileProduk, 2800, 1800, 100, $location.$kode.".".$type);				CropImage($fileProduk, 300, 100, $location.'t_'.$kode.".".$type, $automaticcrop = true, 0, 0, 300, 300 );			}		}		function uploadImageGallery($fileProduk, $location, $kode, $newWidth, $newHeight, $thumb) {			if($fileProduk['type']!=''){			$type = $fileProduk['type'];			if ($type == "image/jpeg") {				$type = "jpg";				}elseif ($type == "image/gif") {					$type = "gif";				}elseif ($type == "image/pjpeg") {					$type = "pjpeg";				}elseif ($type == "image/png") {					$type = "png";			}				if (file_exists("".$location.$kode.".jpg")) {					unlink("".$location.$kode.".jpg");				}				if (file_exists("".$location.$kode.".gif")) {					unlink("".$location.$kode.".gif");				}				if (file_exists("".$location.$kode.".pjpeg")) {					unlink("".$location.$kode.".pjpeg");				}				if (file_exists("".$location.$kode.".png")) {					unlink("".$location.$kode.".png");				}				ResizeImage($fileProduk, $newWidth, $newHeight, 96, $location.$kode.".".$type);				CropImage($fileProduk, $thumb, 96, $location.'t_'.$kode.".".$type, $automaticcrop = true, 0, 0, 300, 300 );			}		}		function uploadImageGalleryCustom($fileProduk, $location, $kode, $newWidth, $newHeight, $newWidth2, $newHeight2) {			if($fileProduk['type']!=''){			$type = $fileProduk['type'];			if ($type == "image/jpeg") {				$type = "jpg";				}elseif ($type == "image/gif") {					$type = "gif";				}elseif ($type == "image/pjpeg") {					$type = "pjpeg";				}elseif ($type == "image/png") {					$type = "png";			}				if (file_exists("".$location.$kode.".jpg")) {					unlink("".$location.$kode.".jpg");				}				if (file_exists("".$location.$kode.".gif")) {					unlink("".$location.$kode.".gif");				}				if (file_exists("".$location.$kode.".pjpeg")) {					unlink("".$location.$kode.".pjpeg");				}				if (file_exists("".$location.$kode.".png")) {					unlink("".$location.$kode.".png");				}				ResizeImage($fileProduk,  $newWidth, $newHeight, 200, $location.$kode.".".$type);				ResizeImage($fileProduk,  $newWidth2, $newHeight2, 200, $location.'t_'.$kode.".".$type);			}		}		function uploadImage4($fileProduk, $location, $kode) {			if($fileProduk['type']!=''){			$type = $fileProduk['type'];			if ($type == "image/jpeg") {				$type = "jpg";				}elseif ($type == "image/gif") {					$type = "gif";				}elseif ($type == "image/pjpeg") {					$type = "pjpeg";				}elseif ($type == "image/png") {					$type = "png";			}				if (file_exists("".$location.$kode.".jpg")) {					unlink("".$location.$kode.".jpg");				}				if (file_exists("".$location.$kode.".gif")) {					unlink("".$location.$kode.".gif");				}				if (file_exists("".$location.$kode.".pjpeg")) {					unlink("".$location.$kode.".pjpeg");				}				if (file_exists("".$location.$kode.".png")) {					unlink("".$location.$kode.".png");				}				ResizeImage($fileProduk, 2800, 1800, 100, $location.$kode.".".$type);				CropImage($fileProduk, 300, 100, $location.'t_'.$kode.".".$type, $automaticcrop = true, 0, 0, 300, 300 );			}		}		function uploadImage5($fileProduk, $location, $kode) {			if($fileProduk['type']!=''){			$type = $fileProduk['type'];			if ($type == "image/jpeg") {				$type = "jpg";				}elseif ($type == "image/gif") {					$type = "gif";				}elseif ($type == "image/pjpeg") {					$type = "pjpeg";				}elseif ($type == "image/png") {					$type = "png";			}				if (file_exists("".$location.$kode.".jpg")) {					unlink("".$location.$kode.".jpg");				}				if (file_exists("".$location.$kode.".gif")) {					unlink("".$location.$kode.".gif");				}				if (file_exists("".$location.$kode.".pjpeg")) {					unlink("".$location.$kode.".pjpeg");				}				if (file_exists("".$location.$kode.".png")) {					unlink("".$location.$kode.".png");				}				ResizeImage($fileProduk, 2800, 1800, 100, $location.$kode.".".$type);				CropImage($fileProduk, 300, 100, $location.'t_'.$kode.".".$type, $automaticcrop = true, 0, 0, 300, 300 );			}		}		function uploadDoc($fileProduk, $location, $kode) {		if($fileProduk['type']!=''){			$type = $fileProduk['type'];			if ($type == "application/pdf") {				$type = "pdf";				}elseif ($type == "text/doc") {					$type = "doc";				}elseif ($type == "text/xlsx") {					$type = "xlsx";				}elseif ($type == "text/xls") {					$type = "xls";				}elseif ($type == "text/txt") {					$type = "txt";			}				if (file_exists("".$location.$kode.".pdf")) {					unlink("".$location.$kode.".pdf");				}				if (file_exists("".$location.$kode.".doc")) {					unlink("".$location.$kode.".doc");				}				if (file_exists("".$location.$kode.".xls")) {					unlink("".$location.$kode.".xls");				}if (file_exists("".$location.$kode.".xlsx")) {					unlink("".$location.$kode.".xlsx");				}				if (file_exists("".$location.$kode.".txt")) {					unlink("".$location.$kode.".txt");				}				copy($fileProduk['tmp_name'], $location.$kode.".".$type);			}		}		function cekExistsImages($dir, $kode){			if (file_exists($dir.$kode.".jpg")) {				$type = "jpg";			}elseif (file_exists($dir.$kode.".gif")) {				$type = "gif";			}elseif (file_exists($dir.$kode.".png")) {				$type = "png";			}elseif (file_exists($dir.$kode.".jpeg")) {				$type = "jpeg";			}elseif (file_exists($dir.$kode.".pjpeg")) {				$type = "pjpeg";			}elseif (file_exists($dir.$kode.".pdf")) {				$type = "pdf";			}else{				$type = "";			}			return $type;		}		function showImages($dir, $kode, $width, $height){			if (file_exists($dir.$kode.".jpg")) {				$type = "jpg";			}elseif (file_exists($dir.$kode.".gif")) {				$type = "gif";			}elseif (file_exists($dir.$kode.".png")) {				$type = "png";			}elseif (file_exists($dir.$kode.".jpeg")) {				$type = "jpeg";			}elseif (file_exists($dir.$kode.".pjpeg")) {				$type = "pjpeg";			}else{				$type = "";			}			if ($type == "") {					//$picture	= '<img src="'.$dir.'empty.jpg" width="'.$width.'"  height="'.$height.'" border="0"/>';				}else{					$picture	= '<img src="'.$dir.$kode.'.'.$type.'?'.date("Ymdhis").'" width="'.$width.'"  height="'.$height.'" border="0"/>';				}			return $picture;		}		function showImagesExt($dir, $kode, $width, $height, $custom){			if (file_exists($dir.$kode.".jpg")) {				$type = "jpg";			}elseif (file_exists($dir.$kode.".gif")) {				$type = "gif";			}elseif (file_exists($dir.$kode.".png")) {				$type = "png";			}elseif (file_exists($dir.$kode.".jpeg")) {				$type = "jpeg";			}elseif (file_exists($dir.$kode.".pjpeg")) {				$type = "pjpeg";			}else{				$type = "";			}			if ($type == "") {					//$picture	= '<img src="'.$dir.'empty.jpg" width="'.$width.'"  height="'.$height.'" border="0"/>';				}else{					$picture	= '<img src="'.$dir.$kode.'.'.$type.'?'.date("YmdHis").'" width="'.$width.'"  height="'.$height.'" '.$custom.' border="0"/>';				}			return $picture;		}		function showImagesW($dir, $kode, $width){			if (file_exists($dir.$kode.".jpg")) {				$type = "jpg";			}elseif (file_exists($dir.$kode.".gif")) {				$type = "gif";			}elseif (file_exists($dir.$kode.".png")) {				$type = "png";			}elseif (file_exists($dir.$kode.".jpeg")) {				$type = "jpeg";			}elseif (file_exists($dir.$kode.".pjpeg")) {				$type = "pjpeg";			}else{				$type = "";			}			if ($type == "") {					$picture	= '<img src="'.$dir.'empty.jpg?'.date("ymdhis").'" width="'.$width.'" border="0"/>';				}else{					$picture	= '<img src="'.$dir.'t_'.$kode.'.'.$type.'?'.date("ymdhis").'" width="'.$width.'" border="0"/>';				}			return $picture;		}		function showImagesH($dir, $kode, $height){			if (file_exists($dir.$kode.".jpg")) {				$type = "jpg";			}elseif (file_exists($dir.$kode.".gif")) {				$type = "gif";			}elseif (file_exists($dir.$kode.".png")) {				$type = "png";			}elseif (file_exists($dir.$kode.".jpeg")) {				$type = "jpeg";			}elseif (file_exists($dir.$kode.".pjpeg")) {				$type = "pjpeg";			}else{				$type = "";			}			if ($type == "") {					$picture	= '<img src="'.$dir.'t_default.png"  height="'.$height.'" border="0"/>';				}else{					$picture	= '<img src="'.$dir.'t_'.$kode.'.'.$type.'?'.date("ymdhis").'"  height="'.$height.'" border="0"/>';				}			return $picture;		}		function removeImage($dir, $kode) {			if (file_exists($dir.$kode.".jpg")) {				unlink($dir.$kode.".jpg");			}			if (file_exists($dir.$kode.".gif")) {				unlink($dir.$kode.".gif");			}			if (file_exists($dir.$kode.".png")) {				unlink($dir.$kode.".png");			}			if (file_exists($dir.$kode.".jpeg")) {				unlink($dir.$kode.".jpeg");			}			if (file_exists($dir.$kode.".pjpeg")) {				unlink($dir.$kode.".pjpeg");			}		}		/*		 *  ~ Pagination - Database ~		 * 	1. get_paging_record		 *  2. get_paging_content		 *  3. SearcRecord		 *  4. Save To DataBase (insert - select - update - delete)		 */		function searchUser($keyword) {			$sqlStr = "(`nama` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR user.`username` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR user.`nama` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `nama` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `username` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `username` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `nama` LIKE '%" . $keyword . "%')";			return $sqlStr;		}		function searchNews($keyword) {			$sqlStr = "(`judul` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR tbl_content.`judul` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR tbl_content.`rangkuman` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `judul` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `rangkuman` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `judul` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `rangkuman` LIKE '%" . $keyword . "%')";			return $sqlStr;		}		function searchData($field, $keyword){			$pch = explode(" ",$keyword);			$tmpField=$field;			$result="";			foreach($pch as $like){				if(empty($result)){					$result=$field ." like '%".$like."%' ";				}else{					$field=$tmpField;					$field="OR ".$field;					$result=$result.$field ." like '%".$like."%' ";				}			}		return $result;		}		function searchProduct($keyword) {			$sqlStr = "(`nama_categori` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR tbl_product.`nama_categori` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR tbl_product.`nama_brg` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `kode_brg` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `harga_brg` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `note` LIKE CONVERT( _utf8 '%" . $keyword . "%' USING latin1 ) COLLATE latin1_swedish_ci OR `warna_brg` LIKE '%" . $keyword . "%')";			return $sqlStr;		}		function save_to_database($field_empty1, $field_empty2, $cmdSimpan, $table, $status, $field_db, $field_insert, $field_update, $id, $dir){			$msg	= '';			if(!empty($field_empty1) && !empty($field_empty2)) {				if ($cmdSimpan == 'Save') {					$rs = $this->getRecord($table, $status);					if ($row = mysql_fetch_array($rs)) {						$msg = '<div class="msgfailed">Data Sudah Terdaftar!</div>';					}else{						if ($this->insertQuery($table, $field_db, $field_insert)){							$msg = '<div class="msgsuccess">Penyimpanan Data Berhasil!</div>';							}else{							$msg = '<div class="msgfailed">Penyimpanan Data Gagal!</div>';						}					}				}elseif ($cmdSimpan == 'Update') {					if ($this->updateQuery($table, $field_update, "id = '".$id."'")) {						$msg = '<div class="msgsuccess">Pengeditan Data Berhasil!</div>';						}else{						$msg = '<div class="msgfailed">Pengeditan Data Gagal!</div>';					}				}			}else{				$msg = '<div class="msgfailed">Silakan Masukan Kelengkapan Data, Kolom Yang diberi Tanda Tidak Boleh Kosong!</div>';			}			return $msg;		}		function save_to_databasedoc($field_empty1, $field_empty2, $cmdSimpanDoc, $table, $status, $field_db, $field_insert, $field_update, $id, $file_image, $dir, $name_image){			$msg	= '';			if(!empty($field_empty1) && !empty($field_empty2)) {				if ($cmdSimpanDoc == 'Save') {					$rs = $this->getRecord($table, $status);					if ($row = mysql_fetch_array($rs)) {						$msg = '<div class="msgfailed">Data Sudah Terdaftar!</div>';					}else{						if ($this->insertQuery($table, $field_db, $field_insert)){							$file_image !='' ? $this->uploadDoc($file_image, $dir, $name_image) : '';							$msg = '<div class="msgsuccess">Penyimpanan Data Berhasil!</div>';							}else{							$msg = '<div class="msgfailed">Penyimpanan Data Gagal!</div>';						}					}				}elseif ($cmdSimpanDoc == 'Update') {					if ($this->updateQuery($table, $field_update, "id = '".$id."'")) {						$file_image !='' ? $this->uploadDoc($file_image, $dir, $name_image) : '';						$msg = '<div class="msgsuccess">Pengeditan Data Berhasil!</div>';						}else{						$msg = '<div class="msgfailed">Pengeditan Data Gagal!</div>';					}				}			}else{				$msg = '<div class="msgfailed">Silakan Masukan Kelengkapan Data, Kolom Yang diberi Tanda Tidak Boleh Kosong!</div>';			}			return $msg;		}		  function save_to_database_gallery_six(        $field_empty1,        $field_empty2,        $cmdSimpan,        $table,        $status,        $field_db,        $field_insert,        $field_update,        $id,        $file_image,        $file_image2,        $file_image3,        $file_image4,        $file_image5,        $file_image6,        $dir,        $name_image,        $name_image2,        $name_image3,        $name_image4,        $name_image5,        $name_image6,        $newWidth,        $newHeight,        $thumb      )      {        $msg	= '';        if(!empty($field_empty1) && !empty($field_empty2)) {          if ($cmdSimpan == 'Save') {            $rs = $this->getRecord($table, $status);            if ($row = mysql_fetch_array($rs)) {              $msg = '<div class="msgfailed">Data Sudah Terdaftar!</div>';            }else{            if ($this->insertQuery($table, $field_db, $field_insert)){				$file_image !='' ? $this->uploadImageGallery($file_image, $dir, $name_image, $newWidth, $newHeight, $thumb) : '';				$file_image2 !='' ? $this->uploadImageGallery($file_image2, $dir, $name_image2, $newWidth, $newHeight, $thumb) : '';				$file_image3 !='' ? $this->uploadImageGallery($file_image3, $dir, $name_image3, $newWidth, $newHeight, $thumb) : '';				$file_image4 !='' ? $this->uploadImageGallery($file_image4, $dir, $name_image4, $newWidth, $newHeight, $thumb) : '';				$file_image5 !='' ? $this->uploadImageGallery($file_image5, $dir, $name_image5, $newWidth, $newHeight, $thumb) : '';				$file_image6 !='' ? $this->uploadImageGallery($file_image6, $dir, $name_image6, $newWidth, $newHeight, $thumb) : '';            $msg = '<div class="msgsuccess">Penyimpanan Data Berhasil!</div>';                }else{                $msg = '<div class="msgfailed">Penyimpanan Data Gagal!</div>';              }            }          }elseif ($cmdSimpan == 'Update') {            if ($this->updateQuery($table, $field_update, "id = '".$id."'")) {        $file_image !='' ? $this->uploadImageGallery($file_image, $dir, $name_image, $newWidth, $newHeight, $thumb) : '';				$file_image2 !='' ? $this->uploadImageGallery($file_image2, $dir, $name_image2, $newWidth, $newHeight, $thumb) : '';				$file_image3 !='' ? $this->uploadImageGallery($file_image3, $dir, $name_image3, $newWidth, $newHeight, $thumb) : '';				$file_image4 !='' ? $this->uploadImageGallery($file_image4, $dir, $name_image4, $newWidth, $newHeight, $thumb) : '';				$file_image5 !='' ? $this->uploadImageGallery($file_image5, $dir, $name_image5, $newWidth, $newHeight, $thumb) : '';				$file_image6 !='' ? $this->uploadImageGallery($file_image6, $dir, $name_image6, $newWidth, $newHeight, $thumb) : '';              $msg = '<div class="msgsuccess">Pengeditan Data Berhasil!</div>';              }else{              $msg = '<div class="msgfailed">Pengeditan Data Gagal!</div>';            }          }        }else{          $msg = '<div class="msgfailed">Silakan Masukan Kelengkapan Data, Kolom Yang diberi Tanda Tidak Boleh Kosong!</div>';        }        return $msg;      }		function save_to_database_gallery($field_empty1, $field_empty2, $cmdSimpan, $table, $status, $field_db, $field_insert, $field_update, $id, $file_image, $dir, $name_image, $newWidth, $newHeight, $thumb){			$msg	= '';			if(!empty($field_empty1) && !empty($field_empty2)) {				if ($cmdSimpan == 'Save') {					$rs = $this->getRecord($table, $status);					if ($row = mysql_fetch_array($rs)) {						$msg = '<div class="msgfailed">Data Sudah Terdaftar!</div>';					}else{						if ($this->insertQuery($table, $field_db, $field_insert)){							$file_image !='' ? $this->uploadImageGallery($file_image, $dir, $name_image, $newWidth, $newHeight, $thumb) : '';							$msg = '<div class="msgsuccess">Penyimpanan Data Berhasil!</div>';							}else{							$msg = '<div class="msgfailed">Penyimpanan Data Gagal!</div>';						}					}				}elseif ($cmdSimpan == 'Update') {					if ($this->updateQuery($table, $field_update, "id = '".$id."'")) {						$file_image !='' ? $this->uploadImageGallery($file_image, $dir, $name_image, $newWidth, $newHeight, $thumb) : '';						$msg = '<div class="msgsuccess">Pengeditan Data Berhasil!</div>';						}else{						$msg = '<div class="msgfailed">Pengeditan Data Gagal!</div>';					}				}			}else{				$msg = '<div class="msgfailed">Silakan Masukan Kelengkapan Data, Kolom Yang diberi Tanda Tidak Boleh Kosong!</div>';			}			return $msg;		}		function save_to_database_gallery_custom($field_empty1, $field_empty2, $cmdSimpan, $table, $status, $field_db, $field_insert, $field_update, $id, $file_image, $dir, $name_image, $newWidth, $newHeight, $newWidth2, $newHeight2){			$msg	= '';			if(!empty($field_empty1) && !empty($field_empty2)) {				if ($cmdSimpan == 'Save') {					$rs = $this->getRecord($table, $status);					if ($row = mysql_fetch_array($rs)) {						$msg = '<div class="msgfailed">Data Sudah Terdaftar!</div>';					}else{						if ($this->insertQuery($table, $field_db, $field_insert)){							$file_image !='' ? $this->uploadImageGalleryCustom($file_image, $dir, $name_image, $newWidth, $newHeight, $newWidth2, $newHeight2) : '';							$msg = '<div class="msgsuccess">Penyimpanan Data Berhasil!</div>';							}else{							$msg = '<div class="msgfailed">Penyimpanan Data Gagal!</div>';						}					}				}elseif ($cmdSimpan == 'Update') {					if ($this->updateQuery($table, $field_update, "id = '".$id."'")) {						$file_image !='' ? $this->uploadImageGalleryCustom($file_image, $dir, $name_image, $newWidth, $newHeight, $newWidth2, $newHeight2) : '';						$msg = '<div class="msgsuccess">Pengeditan Data Berhasil!</div>';						}else{						$msg = '<div class="msgfailed">Pengeditan Data Gagal!</div>';					}				}			}else{				$msg = '<div class="msgfailed">Silakan Masukan Kelengkapan Data, Kolom Yang diberi Tanda Tidak Boleh Kosong!</div>';			}			return $msg;		}		 function save_to_database2($field_empty1, $field_empty2, $cmdSimpan, $table, $status, $field_db, $field_insert, $field_update, $id, $file_image, $file_image2, $dir, $name_image, $name_image2, $newWidth, $newHeight, $thumb){			$msg	= '';			if(!empty($field_empty1) && !empty($field_empty2)) {				if ($cmdSimpan == 'Save') {					$rs = $this->getRecord($table, $status);					if ($row = mysql_fetch_array($rs)) {						$msg = '<div class="msgfailed">Data Sudah Terdaftar!</div>';					}else{						if ($this->insertQuery($table, $field_db, $field_insert)){							$file_image !='' ? $this->uploadImage2($file_image, $dir, $name_image, $newWidth, $newHeight, $thumb) : '';							$file_image2 !='' ? $this->uploadImage2($file_image2, $dir, $name_image2, $newWidth, $newHeight, $thumb) : '';							$msg = '<div class="msgsuccess">Penyimpanan Data Berhasil!</div>';							}else{							$msg = '<div class="msgfailed">Penyimpanan Data Gagal!</div>';						}					}				}elseif ($cmdSimpan == 'Update') {					if ($this->updateQuery($table, $field_update, "id = '".$id."'")) {						$file_image   !='' ? $this->uploadImage2($file_image, $dir, $name_image, $newWidth, $newHeight, $thumb) : '';						$file_image2 !='' ? $this->uploadImage2($file_image2, $dir, $name_image2, $newWidth, $newHeight, $thumb) : '';						$msg = '<div class="msgsuccess">Pengeditan Data Berhasil!</div>';						}else{						$msg = '<div class="msgfailed">Pengeditan Data Gagal!</div>';					}				}			}else{				$msg = '<div class="msgfailed">Silakan Masukan Kelengkapan Data, Kolom Yang diberi Tanda Tidak Boleh Kosong!</div>';			}			return $msg;		}	function save_to_database_gallery_category(			$field_empty1,			$field_empty2,			$cmdSimpan,			$table,			$status,			$field_db,			$field_insert,			$field_update,			$id,			$file_image,			$file_image2,			$file_image3,			$dir,			$name_image,			$name_image2,			$name_image3,			$newWidth,			$newHeight,			$newWidth2,			$newHeight2			)		{			$msg	= '';			if(!empty($field_empty1) && !empty($field_empty2)) {				if ($cmdSimpan == 'Save') {					$rs = $this->getRecord($table, $status);					if ($row = mysql_fetch_array($rs)) {						$msg = '<div class="msgfailed">Data Sudah Terdaftar!</div>';					}else{						if ($this->insertQuery($table, $field_db, $field_insert)){							$file_image !='' ? $this->uploadImageGalleryCustom($file_image, $dir, $name_image, $newWidth, $newHeight,$newWidth2, $newHeight2) : '';							$file_image2 !='' ? $this->uploadImageGalleryCustom($file_image2, $dir, $name_image2, $newWidth, $newHeight, $newWidth2, $newHeight2) : '';							$file_image3 !='' ? $this->uploadImageGalleryCustom($file_image3, $dir, $name_image3, $newWidth, $newHeight, $newWidth2, $newHeight2) : '';							$msg = '<div class="msgsuccess">Penyimpanan Data Berhasil!</div>';							}else{							$msg = '<div class="msgfailed">Penyimpanan Data Gagal!</div>';						}					}				}elseif ($cmdSimpan == 'Update') {					if ($this->updateQuery($table, $field_update, "id = '".$id."'")) {						$file_image !='' ? $this->uploadImageGalleryCustom($file_image, $dir, $name_image, $newWidth, $newHeight, $newWidth2, $newHeight2) : '';						$file_image2 !='' ? $this->uploadImageGalleryCustom($file_image2, $dir, $name_image2, $newWidth, $newHeight, $newWidth2, $newHeight2) : '';						$file_image3 !='' ? $this->uploadImageGalleryCustom($file_image3, $dir, $name_image3, $newWidth, $newHeight, $newWidth2, $newHeight2) : '';						$msg = '<div class="msgsuccess">Pengeditan Data Berhasil!</div>';						}else{						$msg = '<div class="msgfailed">Pengeditan Data Gagal!</div>';					}				}			}else{				$msg = '<div class="msgfailed">Silakan Masukan Kelengkapan Data, Kolom Yang diberi Tanda Tidak Boleh Kosong!</div>';			}			return $msg;		}	function save_to_database4($field_empty1, $field_empty2, $cmdSimpan, $table, $status, $field_db, $field_insert, $field_update, $id, $file_image, $file_image2, $file_image3, $dir, $name_image, $name_image2, $name_image3){			$msg	= '';			if(!empty($field_empty1) && !empty($field_empty2)) {				if ($cmdSimpan == 'Simpan' || $cmdSimpan=='Save') {					$rs = $this->getRecord($table, $status);					if ($row = mysql_fetch_array($rs)) {						$msg = '<div class="msgfailed">Data Sudah Terdaftar!</div>';					}else{						if ($this->insertQuery($table, $field_db, $field_insert)){							$file_image !='' ? $this->uploadImage($file_image, $dir, $name_image) : '';							$file_image2 !='' ? $this->uploadImage($file_image2, $dir, $name_image2) : '';							$file_image3 !='' ? $this->uploadImage($file_image3, $dir, $name_image3) : '';							$msg = '<div class="msgsuccess">Penyimpanan Data Berhasil!</div>';							}else{							$msg = '<div class="msgfailed">Penyimpanan Data Gagal!</div>';						}					}				}elseif ($cmdSimpan == 'Update') {					if ($this->updateQuery($table, $field_update, "id = '".$id."'")) {						$file_image   !='' ? $this->uploadImage($file_image, $dir, $name_image) : '';						$file_image2 !='' ? $this->uploadImage($file_image2, $dir, $name_image2) : '';						$file_image3 !='' ? $this->uploadImage($file_image3, $dir, $name_image3) : '';						$msg = '<div class="msgsuccess">Pengeditan Data Berhasil!</div>';						}else{						$msg = '<div class="msgfailed">Pengeditan Data Gagal!</div>';					}				}			}else{				$msg = '<div class="msgfailed">Silakan Masukan Kelengkapan Data, Kolom Yang diberi Tanda Tidak Boleh Kosong!</div>';			}			return $msg;		}		function get_paging_record($table, $status, $keyword, $noPage, $dataPerPage, $search, $order_by){			$offset 	= ($noPage - 1) * $dataPerPage;			$condition 	= ($keyword != "" ? " AND " . $this->$search($keyword) : "");			$rs 		= $this->getRecord($table, $status.$condition." ORDER BY " .$order_by. " LIMIT " .$offset.", ".$dataPerPage);			return $rs;		}		function get_paging_content($table, $status, $keyword, $noPage, $dataPerPage, $search){			$condition 		= ($keyword != "" ? " AND " . $this->$search($keyword) : "");			$hasil			= $this->getCount($table, "*", $status.$condition);			$jumData 		= $hasil;			$showPage		= 0;			$data_paging	= "";			$jumPage 		= ceil($jumData/$dataPerPage);			if ($noPage > 1)				print $this->anchor(("javascript:document.frm_search.page.value='".($noPage-1)."'; document.frm_search.submit()"), "&laquo; Prev&nbsp;", '');			for($page = 1; $page <= $jumPage; $page++){				 if ((($page >= $noPage - 3) && ($page <= $noPage + 3)) || ($page == 1) || ($page == $jumPage)){					if (($showPage == 1) && ($page != 2)) print "...";					if (($showPage != ($jumPage - 1)) && ($page == $jumPage)) print "...";					if ($page == $noPage) print " <b>".$page."</b> "; else					print $this->anchor(("javascript:document.frm_search.page.value='".$page."'; document.frm_search.submit()"), '&nbsp;'.$page.'&nbsp;', '');					$showPage = $page;				 }			}			if ($noPage < $jumPage)				$data_paging =  $this->anchor(("javascript:document.frm_search.page.value='".($noPage + 1)."'; document.frm_search.submit()"), '&nbsp;Next &raquo;', '');			return $data_paging;		}		function getBulan($bln){			switch ($bln){				case 1:  return "Januari";					break;				case 2:	 return "Februari";					break;				case 3:	 return "Maret";					break;				case 4:	 return "April";					break;				case 5:	 return "Mei";					break;				case 6:	 return "Juni";					break;				case 7:	 return "Juli";					break;				case 8:	 return "Agustus";					break;				case 9:	 return "September";					break;				case 10: return "Oktober";					break;				case 11: return "November";					break;				case 12: return "Desember";					break;	}}function getBulanSingkat($bln){			switch ($bln){				case 1:  return "Jan";					break;				case 2:	 return "Feb";					break;				case 3:	 return "Mar";					break;				case 4:	 return "Apr";					break;				case 5:	 return "Mei";					break;				case 6:	 return "Jun";					break;				case 7:	 return "Jul";					break;				case 8:	 return "Aug";					break;				case 9:	 return "Sep";					break;				case 10: return "Okt";					break;				case 11: return "Nov";					break;				case 12: return "Des";					break;	}}function getBulanTimor($bln){			switch ($bln){				case 1:  return "Jan";					break;				case 2:	 return "Feb";					break;				case 3:	 return "Marsu";					break;				case 4:	 return "Abril";					break;				case 5:	 return "Mei";					break;				case 6:	 return "Jun";					break;				case 7:	 return "Jul";					break;				case 8:	 return "Aug";					break;				case 9:	 return "Sep";					break;				case 10: return "Okt";					break;				case 11: return "Nov";					break;				case 12: return "Des";					break;	}}		function tgl_indo_penuh($tgl){			$tanggal = substr($tgl,8,2);			$bulan   = $this->getBulanSingkat(substr($tgl,5,2));			$tahun   = substr($tgl,0,4);			return $tanggal.' '.$bulan.' '.$tahun;		}		function tgl_timorleste($tgl){			$tanggal = substr($tgl,8,2);			$bulan   = $this->getBulanTimor(substr($tgl,5,2));			$tahun   = substr($tgl,0,4);			return $tanggal.' '.$bulan.' '.$tahun;		}		function getNumRowData($sql){			$sql=mysql_query($sql);			$jmlData=mysql_num_rows($sql);			return $jmlData;		}		function replaceTagP($data){			$data=str_replace("<p>", "", str_replace("</p>", "", $data));			return $data;		}		/* End Pagination & Save to database */}function pageSelected($string2){	if(stristr($_SERVER['SCRIPT_NAME'], $string2) === FALSE){		return "";	} else		return "current";}//Resize Imagefunction GetFileExt($filename){	$part = explode(".", $filename);	return "." . $part[count($part) - 1];}//ResizeImage($_FILES['tmp_name'], 800, 600, 100, 'potobaru.jpg');function ResizeImage($foto, $newwidth, $newheight, $quality, $output){	ini_set("memory_limit","1024M");	$uploadedfile = $foto['tmp_name'];	if (strlen($uploadedfile) != 0)	{		$type = $foto['type'];		list($width, $height) = getimagesize($uploadedfile);		$npercent = 1.0;		$scalewidth  = $newwidth / $width;		$scaleheight = $newheight / $height;		//echo "nilai : $uploadedfile";		//return false;		if ($scalewidth < $scaleheight)			$npercent = $scalewidth;		else			$npercent = $scaleheight;		$newheight = $height * $npercent;		$newwidth  = $width * $npercent;		$tmp = imagecreatetruecolor($newwidth, $newheight);		if ($type == "image/jpeg" || $type == "image/pjpeg")			$src = imagecreatefromjpeg($uploadedfile);		elseif ($type == "image/gif")			$src = imagecreatefromgif($uploadedfile);		elseif ($type == "image/png" || $type == "image/x-png")			$src = imageCreateFromPNG($uploadedfile);		elseif ($type === "image/bmp")			$src = imagecreatefrombmp($uploadedfile);		else {			$type = explode("/", $type);			//echo "nilai tipe : $type[0], nilai : $type[1] ";			$tipe = (string)$type[1];			if ($tipe == "jpeg" || $tipe == "pjpeg" || $tipe == "jpg")				$src = imagecreatefromjpeg($uploadedfile);			elseif ($tipe == "gif")				$src = imagecreatefromgif($uploadedfile);			elseif ($tipe == "png" || $tipe == "x-png")				$src = imageCreateFromPNG($uploadedfile);			elseif ($tipe == "bmp")				$src = imagecreatefrombmp($uploadedfile);			//$src = imagecreatefromstring(file_get_contents($foto['tmp_name']));		}		//echo "nilai output : $output";		//echo "nilainya ".get_resource_type($uploadedfile);			//echo "<pre>";			//echo $tmp;			//echo "<pre>";		//imageComposeAlpha( $photoImage, $overlay, 86, 15, $newW, $newH );		if ($type != "image/png" && $type != "image/x-png")		imagecopyresampled($tmp, $src, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);		//imagecopyresampled($tmp, $src, 0, 0, $newwidth, $newheight, $newwidth, $newheight, $width, $height);		if ($type == "image/jpeg" || $type == "image/pjpeg")			imagejpeg($tmp, $output, $quality);		elseif ($type == "image/gif"){			$background = imagecolorallocate($tmp, 0, 0, 0);			ImageColorTransparent($tmp, $background); // make the new temp image all transparent			imagealphablending($tmp, false); // turn off the alpha blending to keep the alpha channel			imagesavealpha($tmp,true);			imagecopyresized($tmp, $src, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);			imagegif($tmp, $output, $quality);		}		elseif ($type == "image/png" || $type == "image/x-png")		{			$background = imagecolorallocate($tmp, 0, 0, 0);			ImageColorTransparent($tmp, $background); // make the new temp image all transparent			imagealphablending($tmp, false); // turn off the alpha blending to keep the alpha channel			imagesavealpha($tmp,true);			imagecopyresized($tmp, $src, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);			$quality = $quality / 100;			imagepng($tmp, $output, $quality);		}		elseif ($type == "image/bmp")			imagebmp($tmp, $output);		else {			$type = explode("/", $foto['type']);			$tipe = (string)$type[1];			if ($tipe == "jpeg" || $tipe == "pjpeg" || $tipe == "jpg")				imagejpeg($tmp, $output, $quality);			elseif ($tipe == "gif"){				$background = imagecolorallocate($tmp, 0, 0, 0);				ImageColorTransparent($tmp, $background); // make the new temp image all transparent				imagealphablending($tmp, false); // turn off the alpha blending to keep the alpha channel				imagesavealpha($tmp,true);				imagecopyresized($tmp, $src, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);				imagegif($tmp, $output, $quality);			}			elseif ($tipe == "png" || $tipe == "x-png") {				$background = imagecolorallocate($tmp, 0, 0, 0);				ImageColorTransparent($tmp, $background); // make the new temp image all transparent				imagealphablending($tmp, false); // turn off the alpha blending to keep the alpha channel				imagesavealpha($tmp,true);				imagecopyresized($tmp, $src, 0, 0, 0, 0, $newwidth, $newheight, $width, $height);				$quality = $quality / 100;				imagepng($tmp, $output, $quality);			}			elseif ($tipe == "bmp")				imagebmp($tmp, $output);		}		imagedestroy($src);		imagedestroy($tmp);		chmod($output, 0777);		return false;	}	return false;}function CropImage($foto, $widthandheight, $quality, $output, $automaticcrop = true, $srcX = 0, $srcY = 0, $srcW = 0, $srcH = 0 ){	//echo $srcX.'-'.$srcY.'-'.$srcW.'-'.$srcH;	if (count($foto)>0 && is_array($foto))		$uploadedfile = $foto['tmp_name'];	else		$uploadedfile = $foto;	//echo "ini nih ".$foto;	if (strlen($uploadedfile) != 0)	{		if (count($foto)>0 && is_array($foto))			$type = $foto['type'];		else {			$uploadedfile = $foto;			$imgInfo = @getimagesize($uploadedfile);			//echo "<pre>";			//print_r($imgInfo);			//echo "</pre>";			//1 = GIF, 2 = JPG, 3 = PNG, 4 = SWF, 5 = PSD, 6 = BMP, 7 = TIFF(intel byte order), 8 = TIFF(motorola byte order), 9 = JPC, 10 = JP2, 11 = JPX, 12 = JB2, 13 = SWC, 14 = IFF, 15 = WBMP, 16 = XBM			$imgtype = $imgInfo[2];			switch($imgtype){				case '1':$type='image/gif';					break;				case '2':$type='image/jpeg';					break;				case '3':$type='image/png';					break;				case '6':$type='image/bmp';					break;			}		}		unset($width,$height);		list($width, $height) = @getimagesize($uploadedfile);		//echo "Ini".$uploadedfile;		$x = ($width/2)-($widthandheight/2);		$y = ($height/2)-($widthandheight/2);		$tmp = imagecreatetruecolor($widthandheight, $widthandheight);		if ($type == "image/jpeg" || $type == "image/pjpeg")			$src = imagecreatefromjpeg($uploadedfile);		elseif ($type == "image/gif")			$src = imagecreatefromgif($uploadedfile);		elseif ($type == "image/png" || $type == "image/x-png")			$src = imageCreateFromPNG($uploadedfile);		elseif ($type == "image/bmp")			$src = imagecreatefrombmp($uploadedfile);		else {			//$src = imagecreatefromstring(file_get_contents($foto['tmp_name']));			$type = explode("/", $type);			$tipe = (string)$type[1];			//echo "nilai tipe : $type[0], nilai : $type[1] ";			if ($tipe == "jpeg" || $tipe == "pjpeg" || $tipe == "jpg")				$src = imagecreatefromjpeg($uploadedfile);			elseif ($tipe == "gif")				$src = imagecreatefromgif($uploadedfile);			elseif ($tipe == "png" || $tipe == "x-png")				$src = imageCreateFromPNG($uploadedfile);			elseif ($tipe)				$src = imagecreatefrombmp($uploadedfile);		}		//echo get_resource_type($uploadedfile);				//imagecopyresampled($dst_r,$img_r,0,0,$_REQUEST['img_x'],$_REQUEST['img_y'],$targ_w,$targ_h,$_REQUEST['img_w'],$_REQUEST['img_h']);		//imagecopyresampled ( resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH )		$x = ($width>$height)?(($width/2)-($height/2)):0;		$y = ($width>$height)?0:(($height/2)-($width/2));		$wh = ($width>$height)?$height:$width;		//$wh = 100;		//imagecopyresampled ( resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH )		if ($automaticcrop)			imagecopyresampled($tmp, $src, 0, 0, $x, $y, $widthandheight, $widthandheight, $wh , $wh);		else			imagecopyresampled($tmp, $src, 0, 0, $srcX, $srcY, $widthandheight, $widthandheight, $srcW , $srcH);		if ($type == "image/jpeg" || $type == "image/pjpeg")			imagejpeg($tmp, $output, $quality);		elseif ($type == "image/gif")			imagegif($tmp, $output, $quality);		elseif ($type == "image/png" || $type == "image/x-png")		{			$quality = $quality / 100;			imagepng($tmp, $output, $quality);		}		elseif ($type == "image/bmp") {			imagebmp($tmp, $output);		}		else {			$type = explode("/", $foto['type']);			$tipe = (string)$type[1];			if ($tipe == "jpeg" || $tipe == "pjpeg" || $tipe == "jpg")				imagejpeg($tmp, $output, $quality);			elseif ($tipe == "gif")				imagegif($tmp, $output, $quality);			elseif ($tipe == "png" || $tipe == "x-png") {				$quality = $quality / 100;				imagepng($tmp, $output, $quality);			}			elseif ($tipe == "bmp")				imagebmp($tmp, $output);		}		imagedestroy($src);		imagedestroy($tmp);		chmod($output, 0777);		return false;	}	return false;	//imagecopyresampled($dst_r,$img_r,0,0,$_REQUEST['img_x'],$_REQUEST['img_y'],		//$targ_w,$targ_h,$_REQUEST['img_w'],$_REQUEST['img_h']);}function imagebmp(&$img, $filename = false){	$wid = imagesx($img);	$hei = imagesy($img);	$wid_pad = str_pad('', $wid % 4, "\0");	$size = 54 + ($wid + $wid_pad) * $hei;	//prepare & save header	$header['identifier']       = 'BM';	$header['file_size']        = dword($size);	$header['reserved']         = dword(0);	$header['bitmap_data']      = dword(54);	$header['header_size']      = dword(40);	$header['width']            = dword($wid);	$header['height']           = dword($hei);	$header['planes']           = word(1);	$header['bits_per_pixel']   = word(24);	$header['compression']      = dword(0);	$header['data_size']        = dword(0);	$header['h_resolution']     = dword(0);	$header['v_resolution']     = dword(0);	$header['colors']           = dword(0);	$header['important_colors'] = dword(0);	if ($filename)	{		$f = fopen($filename, "wb");		foreach ($header AS $h)		{			fwrite($f, $h);		}		//save pixels		for ($y=$hei-1; $y>=0; $y--)		{			for ($x=0; $x<$wid; $x++)			{				$rgb = imagecolorat($img, $x, $y);				fwrite($f, byte3($rgb));			}			fwrite($f, $wid_pad);		}		fclose($f);	}	else	{		foreach ($header AS $h)		{			echo $h;		}		//save pixels		for ($y=$hei-1; $y>=0; $y--)		{			for ($x=0; $x<$wid; $x++)			{				$rgb = imagecolorat($img, $x, $y);				echo byte3($rgb);			}			echo $wid_pad;		}	}}function imagecreatefrombmp($filename){	$f = fopen($filename, "rb");	//read header	$header = fread($f, 54);	$header = unpack(    'c2identifier/Vfile_size/Vreserved/Vbitmap_data/Vheader_size/' .						'Vwidth/Vheight/vplanes/vbits_per_pixel/Vcompression/Vdata_size/'.						'Vh_resolution/Vv_resolution/Vcolors/Vimportant_colors', $header);	if ($header['identifier1'] != 66 or $header['identifier2'] != 77)	{		die('Not a valid bmp file');	}	if ($header['bits_per_pixel'] != 24)	{		die('Only 24bit BMP images are supported');	}	$wid2 = ceil((3*$header['width']) / 4) * 4;	$wid = $header['width'];	$hei = $header['height'];	$img = imagecreatetruecolor($header['width'], $header['height']);	//read pixels	for ($y=$hei-1; $y>=0; $y--)	{		$row = fread($f, $wid2);		$pixels = str_split($row, 3);		for ($x=0; $x<$wid; $x++)		{			imagesetpixel($img, $x, $y, dwordize($pixels[$x]));		}	}	fclose($f);	return $img;}function dwordize($str){	$a = ord($str[0]);	$b = ord($str[1]);	$c = ord($str[2]);	return $c*256*256 + $b*256 + $a;}function byte3($n){	return chr($n & 255) . chr(($n >> 8) & 255) . chr(($n >> 16) & 255);}function dword($n){	return pack("V", $n);}function word($n){	return pack("v", $n);}/*** Compose a PNG file over a src file.* If new width/ height are defined, then resize the PNG (and keep all the transparency info)* Author: Alex Le - http://www.alexle.net*/function imageComposeAlpha( &$src, &$ovr, $ovr_x, $ovr_y, $ovr_w = false, $ovr_h = false){	if( $ovr_w && $ovr_h )	$ovr = imageResizeAlpha( $ovr, $ovr_w, $ovr_h );	/* Noew compose the 2 images */	imagecopy($src, $ovr, $ovr_x, $ovr_y, 0, 0, imagesx($ovr), imagesy($ovr) );}/*** Resize a PNG file with transparency to given dimensions* and still retain the alpha channel information* Author: Alex Le - http://www.alexle.net*/function imageResizeAlpha(&$src, $w, $h){	/* create a new image with the new width and height */	$temp = imagecreatetruecolor($w, $h);	/* making the new image transparent */	$background = imagecolorallocate($temp, 0, 0, 0);	ImageColorTransparent($temp, $background); // make the new temp image all transparent	imagealphablending($temp, false); // turn off the alpha blending to keep the alpha channel	/* Resize the PNG file */	/* use imagecopyresized to gain some performance but loose some quality */	imagecopyresized($temp, $src, 0, 0, 0, 0, $w, $h, imagesx($src), imagesy($src));	/* use imagecopyresampled if you concern more about the quality */	//imagecopyresampled($temp, $src, 0, 0, 0, 0, $w, $h, imagesx($src), imagesy($src));	return $temp;}?>